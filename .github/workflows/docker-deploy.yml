name: CI/CD for Node.js App

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: iqbalzai/asign2:latest  # Correct Docker tag format

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # Run after the build-and-push job

    # steps:
    #   - name: Deploy to Server
    #     run: |
    #       echo "Deploying container to production..."

    # steps:
    #   # Step 4: Set up SSH with private key
    #   - name: Set up SSH
    #     run: |
    #       mkdir -p ~/.ssh
    #       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # Use the private key stored in GitHub secrets
    #       chmod 600 ~/.ssh/id_rsa  # Set the correct permissions for the private key

    #   # Step 5: Deploy to Local Windows Machine via SSH
    #   - name: Deploy to Local Windows Machine
    #     run: |
    #       echo "Deploying container to local Windows machine..."
          
    #       # SSH into your local Windows machine (use your local IP and username)
    #       ssh -o StrictHostKeyChecking=no zaini@10.0.0.23 << 'EOF'
    #         # Pull the Docker image
    #         docker pull iqbalzai/asign2:latest

    #         # Stop any old containers (if any)
    #         docker stop asign2-container || true
    #         docker rm asign2-container || true

    #         # Run the new container
    #         docker run -d --name asign2-container -p 80:3000 iqbalzai/asign2:latest

    #         # Verify that the container is running
    #         docker ps
    #       EOF
